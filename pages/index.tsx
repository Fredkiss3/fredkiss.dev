import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import matter from "gray-matter";

import { readdirSync, readFileSync } from "fs";
import { join } from "path";
import { serialize } from "next-mdx-remote/serialize";
import { MDXRemote } from "next-mdx-remote";

const Home: NextPage = (props) => {
  return (
    <div className={`container`}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={``}>
        <pre className="text-2xl">{JSON.stringify(props, null, 2)}</pre>

        {/* @ts-ignore */}
        {props.data.map((post) => (
          <>
            {/* @ts-ignore */}
            <MDXRemote {...post.serialisedContent} />
          </>
        ))}
      </main>
    </div>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const EXPS_PATH = join(process.cwd(), "data", "experience");
  const data = readdirSync(EXPS_PATH).map((file) => {
    const markdown = readFileSync(join(EXPS_PATH, file), "utf8");

    const { data, content } = matter(markdown);
    return {
      path: file,
      data,
      content,
    };
  });

  for (let index = 0; index < data.length; index++) {
    const element = data[index];
    // @ts-ignore
    element.serialisedContent = await serialize(element.content);
  }

  return {
    props: {
      data,
    },
  };
};
