---
interface Props {
    class?: string;
    type: "map-pin" | "arrow-external" | "suitcase";
}

const { class: className, type } = Astro.props;
---

{
    type === "map-pin" && (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            aria-hidden="true"
            class:list={["flex-none", className]}
        >
            <>
                <path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0" />
                <circle cx="12" cy="10" r="3" />
            </>
        </svg>
    )
}
{
    type === "arrow-external" && (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            aria-hidden="true"
            class:list={["flex-none", className]}
        >
            <>
                <path d="M7 7h10v10" />
                <path d="M7 17 17 7" />
            </>
        </svg>
    )
}
{
    type === "suitcase" && (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class:list={["flex-none", className]}
            aria-hidden="true"
        >
            <>
                <path d="M12 12h.01" />
                <path d="M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2" />
                <path d="M22 13a18.15 18.15 0 0 1-20 0" />
                <rect width="20" height="14" x="2" y="6" rx="2" />
            </>
        </svg>
    )
}
